{"ast":null,"code":"var _jsxFileName = \"/Users/tanavit/Desktop/contact-keeper/client/src/context/alert/AlertState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport AlertContext from './AlertContext';\nimport AlertReducer from './AlertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlertState = props => {\n  _s();\n\n  const initialState = [];\n  const [state, dispatch] = useReducer(AlertReducer, initialState); //Set Alert\n\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuidv4();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type,\n        id\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: id\n    }), timeout);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: {\n      alerts: state,\n      setAlert\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AlertState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AlertState;\nexport default AlertState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertState\");","map":{"version":3,"sources":["/Users/tanavit/Desktop/contact-keeper/client/src/context/alert/AlertState.js"],"names":["React","useReducer","v4","uuidv4","AlertContext","AlertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","timeout","id","payload","setTimeout","alerts","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SACIC,SADJ,EAEIC,YAFJ,QAGO,UAHP;;;AAMA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AACxB,QAAMC,YAAY,GAAG,EAArB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACI,YAAD,EAAeK,YAAf,CAApC,CAHwB,CAKxB;;AACA,QAAMG,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,OAAO,GAAG,IAAtB,KAA+B;AAC5C,UAAMC,EAAE,GAAGd,MAAM,EAAjB;AACAS,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAET,SADD;AAELY,MAAAA,OAAO,EAAE;AAAEJ,QAAAA,GAAF;AAAOC,QAAAA,IAAP;AAAaE,QAAAA;AAAb;AAFJ,KAAD,CAAR;AAKAE,IAAAA,UAAU,CAAC,MAAMP,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,YAAR;AAAsBW,MAAAA,OAAO,EAAED;AAA/B,KAAD,CAAf,EAAsDD,OAAtD,CAAV;AACH,GARD;;AAUA,sBAAQ,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAClCI,MAAAA,MAAM,EAAET,KAD0B;AAElCE,MAAAA;AAFkC,KAA9B;AAAA,cAIHJ,KAAK,CAACY;AAJH;AAAA;AAAA;AAAA;AAAA,UAAR;AAMH,CAtBD;;GAAMb,U;;KAAAA,U;AAwBN,eAAeA,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport AlertContext from './AlertContext';\nimport AlertReducer from './AlertReducer';\n\nimport {\n    SET_ALERT,\n    REMOVE_ALERT\n} from '../types';\n\n\nconst AlertState = props => {\n    const initialState = [];\n\n    const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n    //Set Alert\n    const setAlert = (msg, type, timeout = 5000) => {\n        const id = uuidv4();\n        dispatch({\n            type: SET_ALERT,\n            payload: { msg, type, id }\n        })\n\n        setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n    };\n\n    return (<AlertContext.Provider value={{\n        alerts: state,\n        setAlert\n    }}>\n        {props.children}\n    </AlertContext.Provider>);\n};\n\nexport default AlertState;\n\n"]},"metadata":{},"sourceType":"module"}