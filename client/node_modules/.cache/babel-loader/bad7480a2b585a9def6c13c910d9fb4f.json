{"ast":null,"code":"var _jsxFileName = \"/Users/tanavit/Desktop/contact-keeper/client/src/components/contacts/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  });\n  const {\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n  const {\n    addContact,\n    updateContact,\n    clearCurrent,\n    current\n  } = contactContext;\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    }\n  }, [contactContext, current]);\n\n  const onChange = e => setContact({ ...contact,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact(contact);\n    }\n\n    clearAll();\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary\",\n      children: current ? 'Edit Contact' : 'Add Contact'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      name: \"name\",\n      value: name,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      value: email,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Phone\",\n      name: \"phone\",\n      value: phone,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Contact Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      name: \"type\",\n      value: \"personal\",\n      checked: type === 'personal',\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), \"Personal\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      name: \"type\",\n      value: \"professional\",\n      checked: type === 'professional',\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), \"Professional\", ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: current ? 'Update Contact ' : 'Add Contact',\n        className: \"btn btn-primary btn-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), current && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-light btn-block\",\n        onClick: clearAll,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactForm, \"9GLbQb5NJAyjhu7koHEYnjqldnc=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/tanavit/Desktop/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","contact","setContact","name","email","phone","type","addContact","updateContact","clearCurrent","current","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n    const contactContext = useContext(ContactContext);\n\n    const [contact, setContact] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n    });\n\n    const { name, email, phone, type } = contact;\n\n    const { addContact, updateContact, clearCurrent, current } = contactContext;\n\n    useEffect(() => {\n        if (current !== null) {\n            setContact(current)\n        } else {\n            setContact({\n                name: '',\n                email: '',\n                phone: '',\n                type: 'personal'\n            })\n        }\n    }, [contactContext, current]);\n\n    const onChange = e => setContact({ ...contact, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if (current === null) {\n            addContact(contact);\n        } else {\n            updateContact(contact);\n        }\n        clearAll();\n    };\n\n    const clearAll = () => {\n        clearCurrent();\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <h2 className='text-primary'>{current ? 'Edit Contact' : 'Add Contact'}</h2>\n            <input type='text' placeholder='Name' name='name' value={name} onChange={onChange} />\n            <input type='email' placeholder='Email' name='email' value={email} onChange={onChange} />\n            <input type='text' placeholder='Phone' name='phone' value={phone} onChange={onChange} />\n            <h5>Contact Type</h5>\n            <input type='radio' name='type' value='personal' checked={type === 'personal'} onChange={onChange} />\n            Personal{' '}\n            <input type='radio' name='type' value='professional' checked={type === 'professional'} onChange={onChange} />\n            Professional{' '}\n            <div>\n                <input type=\"submit\" value={current ? 'Update Contact ' : 'Add Contact'} className='btn btn-primary btn-block' />\n            </div>\n            {current && (\n                <div>\n                    <button className='btn btn-light btn-block' onClick={clearAll}>Clear</button>\n                </div>\n            )\n            }\n        </form>\n    )\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}