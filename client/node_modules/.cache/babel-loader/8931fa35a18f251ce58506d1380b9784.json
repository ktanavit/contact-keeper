{"ast":null,"code":"var _jsxFileName = \"/Users/tanavit/Desktop/contact-keeper/client/src/context/contact/contactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACT, CLEAR_FILTER } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [{\n      \"id\": 1,\n      \"name\": \"John Doe\",\n      \"email\": \"jdoe@gmail.com\",\n      \"phone\": \"111-111-1111\",\n      \"type\": \"personal\"\n    }, {\n      \"id\": 2,\n      \"name\": \"Sara Smite\",\n      \"email\": \"ssmite@gmail.com\",\n      \"phone\": \"123-123-1234\",\n      \"type\": \"personal\"\n    }, {\n      \"id\": 3,\n      \"name\": \"Alan White\",\n      \"email\": \"alan@gmail.com\",\n      \"phone\": \"222-222-2222\",\n      \"type\": \"professional\"\n    }],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); //Add Contact\n\n  const addContact = contact => {\n    contact.id = uuidv4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contact\n\n\n  const filterContact = contact => {\n    dispatch({\n      type: FILTER_CONTACT,\n      payload: contact\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["/Users/tanavit/Desktop/contact-keeper/client/src/context/contact/contactState.js"],"names":["React","useReducer","v4","uuidv4","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CLEAR_FILTER","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","id","type","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContact","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACT,\n    CLEAR_FILTER,\n} from '../types';\n\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: [\n            {\n                \"id\": 1,\n                \"name\": \"John Doe\",\n                \"email\": \"jdoe@gmail.com\",\n                \"phone\": \"111-111-1111\",\n                \"type\": \"personal\"\n            },\n            {\n                \"id\": 2,\n                \"name\": \"Sara Smite\",\n                \"email\": \"ssmite@gmail.com\",\n                \"phone\": \"123-123-1234\",\n                \"type\": \"personal\"\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Alan White\",\n                \"email\": \"alan@gmail.com\",\n                \"phone\": \"222-222-2222\",\n                \"type\": \"professional\"\n            }\n        ],\n        current: null,\n        filtered: null\n    };\n\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n    //Add Contact\n    const addContact = contact => {\n        contact.id = uuidv4();\n        dispatch({ type: ADD_CONTACT, payload: contact });\n    }\n\n    //Delete Contact\n\n    const deleteContact = id => {\n        dispatch({ type: DELETE_CONTACT, payload: id });\n    }\n\n    //Set Current Contact\n\n    const setCurrent = contact => {\n        dispatch({ type: SET_CURRENT, payload: contact });\n    }\n\n\n    //Clear Current Contact\n\n    const clearCurrent = () => {\n        dispatch({ type: CLEAR_CURRENT });\n    }\n\n    //Update Contact\n    const updateContact = contact => {\n        dispatch({ type: UPDATE_CONTACT, payload: contact });\n    }\n\n    //Filter Contact\n    const filterContact = contact => {\n        dispatch({ type: FILTER_CONTACT, payload: contact });\n    }\n\n    //Clear Filter\n    const clearFilter = () => {\n        dispatch({ type: CLEAR_FILTER });\n    }\n\n    return (<ContactContext.Provider value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContact,\n        clearFilter\n    }}>\n        {props.children}\n    </ContactContext.Provider>);\n};\n\nexport default ContactState;\n\n"]},"metadata":{},"sourceType":"module"}