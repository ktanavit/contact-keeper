{"ast":null,"code":"var _jsxFileName = \"/Users/tanavit/Desktop/contact-keeper/client/src/components/contacts/ContactItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactContext from '../../context/contact/contactContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactItem = ({\n  contact\n}) => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const {\n    deleteContact,\n    setCurrent,\n    clearCurrent\n  } = contactContext;\n  const {\n    id,\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n\n  const onDelete = () => {\n    deleteContact(id);\n    clearCurrent();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card bg-light\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-primary text-left\",\n      children: [name, ' ', \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          float: 'right'\n        },\n        className: 'badge ' + (type === 'professional' ? 'badge-success' : 'badge-primary'),\n        children: type.charAt(0).toUpperCase() + type.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: [email && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-envelope open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), \" \", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 28\n      }, this), phone && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), \" \", phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark btn-sm\",\n        onClick: () => setCurrent(contact),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger btn-sm\",\n        onClick: onDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactItem, \"6ffJmqxeUUv4Q9skTZKiRD1WUuU=\");\n\n_c = ContactItem;\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired\n};\nexport default ContactItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactItem\");","map":{"version":3,"sources":["/Users/tanavit/Desktop/contact-keeper/client/src/components/contacts/ContactItem.js"],"names":["React","useContext","PropTypes","ContactContext","ContactItem","contact","contactContext","deleteContact","setCurrent","clearCurrent","id","name","email","phone","type","onDelete","float","charAt","toUpperCase","slice","propTypes","object","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACjC,QAAMC,cAAc,GAAGL,UAAU,CAACE,cAAD,CAAjC;AACA,QAAM;AAAEI,IAAAA,aAAF;AAAiBC,IAAAA,UAAjB;AAA6BC,IAAAA;AAA7B,MAA8CH,cAApD;AACA,QAAM;AAAEI,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,MAAmCT,OAAzC;;AAEA,QAAMU,QAAQ,GAAG,MAAM;AACnBR,IAAAA,aAAa,CAACG,EAAD,CAAb;AACAD,IAAAA,YAAY;AACf,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA,iBACKE,IADL,EACW,GADX,oBACgB;AAAM,QAAA,KAAK,EAAE;AAAEK,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAiC,QAAA,SAAS,EAAE,YACnDF,IAAI,KAAK,cAAT,GAA0B,eAA1B,GAA4C,eADO,CAA5C;AAAA,kBAEPA,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BJ,IAAI,CAACK,KAAL,CAAW,CAAX;AAFxB;AAAA;AAAA;AAAA;AAAA,cADhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,iBACKP,KAAK,iBAAK;AAAA,gCACP;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADO,OACmCA,KADnC;AAAA;AAAA;AAAA;AAAA;AAAA,cADf,EAIKC,KAAK,iBAAK;AAAA,gCACP;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADO,OAC2BA,KAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJf;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAeI;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAE,MAAML,UAAU,CAACH,OAAD,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,OAAO,EAAEU,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAhCD;;GAAMX,W;;KAAAA,W;AAkCNA,WAAW,CAACgB,SAAZ,GAAwB;AACpBf,EAAAA,OAAO,EAAEH,SAAS,CAACmB,MAAV,CAAiBC;AADN,CAAxB;AAGA,eAAelB,WAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactContext from '../../context/contact/contactContext';\n\n\nconst ContactItem = ({ contact }) => {\n    const contactContext = useContext(ContactContext);\n    const { deleteContact, setCurrent, clearCurrent } = contactContext;\n    const { id, name, email, phone, type } = contact;\n\n    const onDelete = () => {\n        deleteContact(id);\n        clearCurrent();\n    }\n\n    return (\n        <div className='card bg-light'>\n            <h3 className=\"text-primary text-left\">\n                {name}{' '} <span style={{ float: 'right' }} className={'badge ' +\n                    (type === 'professional' ? 'badge-success' : 'badge-primary')}>\n                    {type.charAt(0).toUpperCase() + type.slice(1)}\n                </span>\n            </h3>\n            <ul className=\"list\">\n                {email && (<li>\n                    <i className=\"fas fa-envelope open\"></i> {email}\n                </li>)}\n                {phone && (<li>\n                    <i className=\"fas fa-phone\"></i> {phone}\n                </li>)}\n            </ul>\n            <p>\n                <button className=\"btn btn-dark btn-sm\" onClick={() => setCurrent(contact)}>Edit</button>\n                <button className=\"btn btn-danger btn-sm\" onClick={onDelete} >Delete</button>\n            </p>\n        </div>\n    )\n}\n\nContactItem.propTypes = {\n    contact: PropTypes.object.isRequired,\n}\nexport default ContactItem\n"]},"metadata":{},"sourceType":"module"}