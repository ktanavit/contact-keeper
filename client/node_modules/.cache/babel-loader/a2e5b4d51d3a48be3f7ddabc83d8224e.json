{"ast":null,"code":"var _jsxFileName = \"/Users/tanavit/Desktop/contact-keeper/client/src/context/auth/AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './AuthContext';\nimport AuthReducer from './AuthReducer';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\nimport { async } from 'rxjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); // Load User\n\n  const loadUser = () => {}; // Register User\n\n\n  const register = async fromData => {\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('http://localhost:5000/api/users', fromData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Login User\n\n\n  const loginUser = () => {}; // Logout\n\n\n  const logout = () => {}; // Clear Errors\n\n\n  const cleatErrors = () => {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      loadUser,\n      register,\n      loginUser,\n      logout,\n      cleatErrors\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/Users/tanavit/Desktop/contact-keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","AuthReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","async","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","loadUser","register","fromData","config","header","res","post","type","payload","data","err","response","msg","loginUser","logout","cleatErrors","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SACIC,gBADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,UAJJ,EAKIC,aALJ,EAMIC,UANJ,EAOIC,MAPJ,EAQIC,YARJ,QASO,UATP;AAUA,SAASC,KAAT,QAAsB,MAAtB;;;AAGA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACvB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,IAAAA,eAAe,EAAE,IAFA;AAGjBC,IAAAA,OAAO,EAAE,IAHQ;AAIjBC,IAAAA,IAAI,EAAE,IAJW;AAKjBC,IAAAA,KAAK,EAAE;AALU,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,UAAU,CAACG,WAAD,EAAcY,YAAd,CAApC,CATuB,CAWvB;;AACA,QAAMU,QAAQ,GAAG,MAAM,CAEtB,CAFD,CAZuB,CAgBvB;;;AACA,QAAMC,QAAQ,GAAG,MAAMC,QAAN,IAAkB;AAC/B,UAAMC,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAE;AACJ,wBAAgB;AADZ;AADG,KAAf;;AAKA,QAAI;AACA,YAAMC,GAAG,GAAG,MAAM7B,KAAK,CAAC8B,IAAN,CAAW,iCAAX,EAA8CJ,QAA9C,EAAwDC,MAAxD,CAAlB;AACAJ,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAE5B,gBADD;AAEL6B,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,OAAD,CAAR;AAIH,KAND,CAME,OAAOC,GAAP,EAAY;AACVX,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAE3B,aADD;AAEL4B,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBG;AAFtB,OAAD,CAAR;AAIH;AACJ,GAlBD,CAjBuB,CAqCvB;;;AACA,QAAMC,SAAS,GAAG,MAAM,CAEvB,CAFD,CAtCuB,CAyCvB;;;AACA,QAAMC,MAAM,GAAG,MAAM,CAEpB,CAFD,CA1CuB,CA8CvB;;;AACA,QAAMC,WAAW,GAAG,MAAM;AACtBhB,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAErB;AADD,KAAD,CAAR;AAGH,GAJD;;AAOA,sBAAQ,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACjCK,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADoB;AAEjCG,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFU;AAGjCC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHkB;AAIjCC,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAJqB;AAKjCC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KALoB;AAMjCG,MAAAA,QANiC;AAOjCC,MAAAA,QAPiC;AAQjCY,MAAAA,SARiC;AASjCC,MAAAA,MATiC;AAUjCC,MAAAA;AAViC,KAA7B;AAAA,cAYH1B,KAAK,CAAC2B;AAZH;AAAA;AAAA;AAAA;AAAA,UAAR;AAcH,CApED;;GAAM5B,S;;KAAAA,S;AAsEN,eAAeA,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './AuthContext';\nimport AuthReducer from './AuthReducer';\n\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_ERRORS\n} from '../types';\nimport { async } from 'rxjs';\n\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        isAuthenticated: null,\n        loading: true,\n        user: null,\n        error: null,\n    };\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n    // Load User\n    const loadUser = () => {\n\n    }\n\n    // Register User\n    const register = async fromData => {\n        const config = {\n            header: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try {\n            const res = await axios.post('http://localhost:5000/api/users', fromData, config);\n            dispatch({\n                type: REGISTER_SUCCESS,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: REGISTER_FAIL,\n                payload: err.response.data.msg\n            });\n        }\n    }\n\n    // Login User\n    const loginUser = () => {\n\n    }\n    // Logout\n    const logout = () => {\n\n    }\n\n    // Clear Errors\n    const cleatErrors = () => {\n        dispatch({\n            type: CLEAR_ERRORS\n        })\n    }\n\n\n    return (<AuthContext.Provider value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        loadUser,\n        register,\n        loginUser,\n        logout,\n        cleatErrors\n    }}>\n        {props.children}\n    </AuthContext.Provider>);\n};\n\nexport default AuthState;\n\n"]},"metadata":{},"sourceType":"module"}