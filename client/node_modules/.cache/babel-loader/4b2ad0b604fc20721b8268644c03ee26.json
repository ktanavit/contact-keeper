{"ast":null,"code":"var _jsxFileName = \"/Users/tanavit/Desktop/contact-keeper/client/src/context/contact/contactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { GET_CONTACT, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, CONTACT_ERROR, FILTER_CONTACT, CLEAR_CONTACT, CLEAR_FILTER } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [// {\n      //     \"id\": 1,\n      //     \"name\": \"John Doe\",\n      //     \"email\": \"jdoe@gmail.com\",\n      //     \"phone\": \"111-111-1111\",\n      //     \"type\": \"personal\"\n      // },\n      // {\n      //     \"id\": 2,\n      //     \"name\": \"Sara Smite\",\n      //     \"email\": \"ssmite@gmail.com\",\n      //     \"phone\": \"123-123-1234\",\n      //     \"type\": \"personal\"\n      // },\n      // {\n      //     \"id\": 3,\n      //     \"name\": \"Alan White\",\n      //     \"email\": \"alan@gmail.com\",\n      //     \"phone\": \"222-222-2222\",\n      //     \"type\": \"professional\"\n      // }\n    ],\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); //Add Contact\n\n  const addContact = async contact => {\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contact\n\n\n  const filterContact = contact => {\n    dispatch({\n      type: FILTER_CONTACT,\n      payload: contact\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["/Users/tanavit/Desktop/contact-keeper/client/src/context/contact/contactState.js"],"names":["React","useReducer","axios","ContactContext","ContactReducer","GET_CONTACT","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","CONTACT_ERROR","FILTER_CONTACT","CLEAR_CONTACT","CLEAR_FILTER","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","addContact","contact","config","header","res","post","type","payload","data","err","response","msg","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContact","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport {\n    GET_CONTACT,\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    CONTACT_ERROR,\n    FILTER_CONTACT,\n    CLEAR_CONTACT,\n    CLEAR_FILTER,\n} from '../types';\n\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: [\n            // {\n            //     \"id\": 1,\n            //     \"name\": \"John Doe\",\n            //     \"email\": \"jdoe@gmail.com\",\n            //     \"phone\": \"111-111-1111\",\n            //     \"type\": \"personal\"\n            // },\n            // {\n            //     \"id\": 2,\n            //     \"name\": \"Sara Smite\",\n            //     \"email\": \"ssmite@gmail.com\",\n            //     \"phone\": \"123-123-1234\",\n            //     \"type\": \"personal\"\n            // },\n            // {\n            //     \"id\": 3,\n            //     \"name\": \"Alan White\",\n            //     \"email\": \"alan@gmail.com\",\n            //     \"phone\": \"222-222-2222\",\n            //     \"type\": \"professional\"\n            // }\n        ],\n        current: null,\n        filtered: null,\n        error: null\n    };\n\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n    //Add Contact\n    const addContact = async contact => {\n        const config = {\n            header: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try {\n            const res = await axios.post('api/contacts', contact, config);\n            dispatch({ type: ADD_CONTACT, payload: res.data });\n        } catch (err) {\n            dispatch({\n                type: CONTACT_ERROR,\n                payload: err.response.msg\n            })\n        }\n    }\n\n    //Delete Contact\n\n    const deleteContact = id => {\n        dispatch({ type: DELETE_CONTACT, payload: id });\n    }\n\n    //Set Current Contact\n\n    const setCurrent = contact => {\n        dispatch({ type: SET_CURRENT, payload: contact });\n    }\n\n\n    //Clear Current Contact\n\n    const clearCurrent = () => {\n        dispatch({ type: CLEAR_CURRENT });\n    }\n\n    //Update Contact\n    const updateContact = contact => {\n        dispatch({ type: UPDATE_CONTACT, payload: contact });\n    }\n\n\n    //Filter Contact\n    const filterContact = contact => {\n        dispatch({ type: FILTER_CONTACT, payload: contact });\n    }\n\n    //Clear Filter\n    const clearFilter = () => {\n        dispatch({ type: CLEAR_FILTER });\n    }\n\n    return (<ContactContext.Provider value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContact,\n        clearFilter\n    }}>\n        {props.children}\n    </ContactContext.Provider>);\n};\n\nexport default ContactState;\n\n"]},"metadata":{},"sourceType":"module"}